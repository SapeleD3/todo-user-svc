steps:
  # Download .env file
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'gs://fortnaux/.prod.env', '.env']
  # build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['build', '-t', 'gcr.io/${_PROJECT_ID}/user-svc', '.']
  # scan the container image
  - name: 'gcr.io/cloud-builders/gcloud'
    args: 
      [
        'gcloud',
        'artifacts',
        'docker',
        'images',
        'scan',
        'gcr.io/${_PROJECT_ID}/user-svc:latest',
        "--format='value(response.scan)'",
        '>'
        '/workspace/scan_id.txt'
      ]
  # severity check
  - name: 'gcr.io/cloud-builders/gcloud'
    args: 
      [
        'gcloud',
        'artifacts',
        'docker',
        'images',
        'list-vulnerabilities',
        '$(cat /workspace/scan_id.txt)',
        "--format='value(vulnerability.effectiveSeverity)'",
        '|',
        'if',
        'grep',
        '-Fxq',
        '${_SEVERITY};',
        'then',
        'echo',
        'Failed vulnerability check',
        '&&',
        'exit',
        '1;',
        'else',
        'exit',
        '0;',
        'fi'
    ]
  # push the container image to gcr
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_PROJECT_ID}/user-svc']
    # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'run',
        'deploy',
        'users',
        '--image',
        'gcr.io/${_PROJECT_ID}/user-svc',
        '--region',
        'us-central1',
        '--platform',
        'managed',
        '--allow-unauthenticated',
      ]
